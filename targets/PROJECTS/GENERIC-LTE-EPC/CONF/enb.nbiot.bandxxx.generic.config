Active_eNBs = ( "eNB_Eurecom_LTE_NB_IoT_Box");
# Asn1_verbosity, choice in: none, info, annoying
Asn1_verbosity = "none";

eNBs =
(
 {
    ////////// Identification parameters:
    eNB_ID    =  0xe00;
    
    cell_type =  "CELL_MACRO_ENB";
    
    eNB_name  =  "eNB_Eurecom_LTE_NB_IoT_Box";
    
    // Tracking area code, 0x0000 and 0xfffe are reserved values
    tracking_area_code  =  "1";
    
    mobile_country_code =  "208";
    
    mobile_network_code =  "92";
    
       ////////// Physical parameters:
  
    component_carriers = (
    		       	 {
                           node_function                                        = "eNodeB_3GPP";
	                   	   node_timing                                          = "synch_to_ext_device";
	           	           node_synch_ref                                       = 0;
  			               frame_type					      	= "FDD";
	
			//TDD config should be not used for NB-IoT
			/*
                           tdd_config 					      	= 3;
                           tdd_config_s            			      	= 0;
			*/

			   #NORMAL cyclic prefix should be applied for DL frame
 			   prefix_type             			     	= "NORMAL";
			   #set of allowed bands TS 36.104: 1,2,3,5,8,11,12,13,17,18,19,20,25,26,28,31,66,70 
  			   eutra_band              			      	= 3;
                           downlink_frequency      			      	= ;
                           uplink_frequency_offset 			      	= ; //shuld be the duplexing gap??
  			   Nid_cell					      	= 0;
                           N_RB_DL                 			      	= 1;//only 1 RB assigned for NB_IoT
               #it is also needed to know the NRB_DL and NRB_UL of LTE when we are in in-band and guard band mode
               #it is also needed the PRB index choosen for NB-IoT depending on the LTE bandwidht we are using (only specific indexes are allowed)
                           nb_antennas_tx          			      	= 1;
                           nb_antennas_rx          			      	= 1; 
			   tx_gain                                            	= 25;
			   rx_gain                                           	= 20;

                           nprach_CP_length              		      	= ;
			   #OPTIONAL (rsrp_thresholdsNPRACH)
                           rsrp_range      			      	      	= ;
                           nprach_Periodicity      				= ;
  	                   nprach_StartTime 			      		= ;
                           nprach_SubcarrierOffset       			= ;
			   nprach_NumSubcarriers_r13       			= ;
                           nprach_SubcarrierMSG3_RangeStart           	        = ;
                           maxNumPreambleAttemptCE            			= ;
                           numRepetitionsPerPreambleAttempt             	= ;

                           npdcch_NumRepetitions_RA 			        = ;
                           npdcch_StartSF_CSS_RA                  	  	= ;
                           npdcch_Offset_RA                 			= ;
 
                           npdsch_nrs_Power          			      	= ;

			   ACK_NACK_NumRepetitions_NB                           = ;
			   threeTone_CyclicShift                                = ;
     	                   sixTone_CyclicShift  			      	= ;
	                   pusch_groupAssignment      			      	= ;
			//OPTIONAL
			   srs_SubframeConfig					= ;
	                   threeTone_BaseSequence		   	      	= ;
	                   sixTone_BaseSequence                                 = ;
	                   twelveTone_BaseSequence                              = ;

			//OPTIONAL
	                   dl_GapThreshold                                     	= ;
	                   dl_GapPeriodicity                                    = ;
	                   dl_GapDurationCoeff                                	= ;
			
			//ULPowerControlCommon
	                   p0_NominalNPUSCH                                     = ; 
	                   alpha_r13                                            = ;
	                   deltaPreambleMsg3                                    = ;
	                   msg3_delta_Preamble                                  = ;

	
                           preambleTransMax_CE                          	= ;
                           powerRampingStep                         		= ;
                           preambleInitialReceivedTargetPower                   = ;
                           ra_ResponseWindowSize                             	= ;
                           mac_ContentionResolutionTimer                      	= ; 
			 //OPTIONAL
                           connEstFailOffset                              	= ;

			   ue_TimersAndConstants_t300			      	= 1000;
			   ue_TimersAndConstants_t301			     	= 1000;
			   ue_TimersAndConstants_t310			      	= 1000;
			   ue_TimersAndConstants_t311			      	= 10000;
			   ue_TimersAndConstants_n310			      	= 20;
			   ue_TimersAndConstants_n311			      	= 1;


			///freqInfo
                  	   additionalSpectrumEmission				= ;
			//OPTIONAL   
			   carrierFreq						= ;
			   carrierFreqOffset					= ;

			///multiBandInfoList(OPTIONAL)
			   AdditionalSpectrumEmission_t				= ;

			   ue_TransmissionMode                                	= 1;
			 }
			 );



    #Default SRB1-NB configuration for RLC (same as for SIB1bis)
    srb1_NB_parameters : 
    {

	#NOTE: "N/A" means that the UE does not apply a specific value (E-UTRAN can not assume the UE to keeps the previously configured value upon switching to a default configuration

        # timer_poll_retransmit = (ms) [250, 500, 1000,..., 4000, 6000, 10000, 15000, 25000,...] TS 36.331 v14.2.0 pag 616 
        timer_poll_retransmit    = 25000;
        
	//OPTIONAL
        # timer_reordering = (ms) [0,5, ... 100, 110, 120, ... ,200]
        timer_reordering         = N/A;
        
	//OPTIONAL
        # timer_reordering = (ms) [0,5, ... 250, 300, 350, ... ,500]
        timer_status_prohibit    = N/A;
        
	//OPTIONAL
        # poll_pdu = [4, 8, 16, 32 , 64, 128, 256, infinity(>10000)]
        poll_pdu                 =  N/A;
        
	//OPTIONAL
        # poll_byte = (kB) [25,50,75,100,125,250,375,500,750,1000,1250,1500,2000,3000,infinity(>10000)]
        poll_byte                =  N/A;
        
        # max_retx_threshold = [1, 2, 3, 4 , 6, 8, 16, 32]
        max_retx_threshold       =  4;

	#enableStatusReportSN_Gap = ENUMERATED {TRUE} (Enable the status reporting due to detection of reception failure)
	enableStatusReportSN_Gap = "DISABLE"
    }
    
    # ------- SCTP definitions
    SCTP :
    {
        # Number of streams to use in input/output
        SCTP_INSTREAMS  = 2;
        SCTP_OUTSTREAMS = 2;
    };
        
    ////////// MME parameters:
    mme_ip_address      = ( { ipv4       = "192.168.13.11";
                              ipv6       = "192:168:30::17";
                              active     = "yes";
                              preference = "ipv4";
                            }
                          );

    NETWORK_INTERFACES : 
    {
        ENB_INTERFACE_NAME_FOR_S1_MME            = "eth0";
        ENB_IPV4_ADDRESS_FOR_S1_MME              = "192.168.13.10/24";

        ENB_INTERFACE_NAME_FOR_S1U               = "eth0";
        ENB_IPV4_ADDRESS_FOR_S1U                 = "192.168.13.10/24";
        ENB_PORT_FOR_S1U                         = 2152; # Spec 2152
    };
 /*
    otg_config = (
    	         {	      	
    	      	 ue_id				=1;
	     	 app_type			="scbr";
	      	 bg_traffic			="disable";
	      	 },
	      	 {	      	
    	      	 ue_id				=2;
	      	 app_type			="bcbr";
	      	 bg_traffic			="enable";
	      	 }
	      );
*/
    log_config : 
    {
	global_log_level                      ="info"; 
    	global_log_verbosity                  ="medium";
	hw_log_level                          ="debug"; 
    	hw_log_verbosity                      ="medium";
	phy_log_level                         ="info"; 
    	phy_log_verbosity                     ="medium";
	mac_log_level                         ="info"; 
    	mac_log_verbosity                     ="high";
	rlc_log_level                         ="info"; 
    	rlc_log_verbosity                     ="medium";
	pdcp_log_level                        ="info"; 
    	pdcp_log_verbosity                    ="medium";
	rrc_log_level                         ="debug"; 
    	rrc_log_verbosity                     ="medium";
	gtpu_log_level                         ="error"; 
    	gtpu_log_verbosity                     ="medium";
	udp_log_level                         ="error"; 
    	udp_log_verbosity                     ="medium";
	osa_log_level                         ="warn"; 
    	osa_log_verbosity                     ="low";

   };	
   
  }
);
